 long long int count(int s[], int m, int sum) {

        // recursive
        // if(n==0)return 1;
        // if(m==0)return 0;
        // if(s[m-1]<=n)return (count(s,m,n-s[m-1])+count(s,m-1,n));
        // else return count(s,m-1,n);
        
        
        
        //DP
        long long dp[m+1][sum+1];
        for(int i=0;i<=m;i++){
            for(int j=0;j<=sum;j++){
               
                if(i==0)dp[i][j]=0;
                 if(j==0)dp[i][j]=1;
            }
        }
        
        for(int i=1;i<=m;i++){
            for(int j=1;j<=sum;j++){
              if(s[i-1]<=j)dp[i][j]=dp[i][j-s[i-1]]+dp[i-1][j];
                else dp[i][j]=dp[i-1][j];
            }
        }
        return dp[m][sum];
    }
