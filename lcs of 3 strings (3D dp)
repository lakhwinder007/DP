int dp[21][21][21];
int lcs(string a,string b,string c){
    int n=a.size();
    int m=b.size();
    int l=c.size();
    for(int i=0;i<=n;i++){
        for(int j=0;j<=m;j++){
            for(int k=0;k<=l;k++){
            if(i==0||j==0||k==0)dp[i][j][k]=0;
            }
        }
    }
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            for(int k=1;k<=l;k++){
            if(a[i-1]==b[j-1]&&a[i-1]==c[k-1])dp[i][j][k]=dp[i-1][j-1][k-1]+1;
            else dp[i][j][k]=max(dp[i][j][k-1],max(dp[i][j-1][k],dp[i-1][j][k]));
            }
        }
    }
    return dp[n][m][l];
}


int LCSof3 (string a, string b, string c, int n1, int n2, int n3)
{
    return lcs(a,b,c);

}
