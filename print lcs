#include<bits/stdc++.h>
using namespace std;
int dp[100][100];
int lcs(string a,string b){
      int n=a.size();
    int m=b.size();
    // int dp[n+1][m+1];
     for(int i=0;i<=n;i++){
        for(int j=0;j<=m;j++){
           if(i==0||j==0)dp[i][j]=0;

        }
     }
      for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
          if(a[i-1]==b[j-1]){
            dp[i][j]=1+dp[i-1][j-1];

          }
          else {
            dp[i][j]=max(dp[i][j-1],dp[i-1][j]);
          }
         
           
        }
     }
     for(int i=0;i<=n;i++){
            for(int j=0;j<=m;j++){
                cout<< dp[i][j]<<" ";
            }
            cout<<endl;
           }
     return dp[n][m];
    //  int ans=0;
    //        for(int i=0;i<=n;i++){
    //         for(int j=0;j<=m;j++){
    //             ans=max(ans,dp[i][j]);
    //         }
    //        }
}
int main(){

    string a="corporation";
    string b="rotation";
    int n=a.size();
    int m=b.size();
    lcs(a,b);
    int i=n,j=m;
    string ans;
    while(i>0&&j>0){
        cout<<dp[i][j]<<" ";
        if(a[i-1]==b[j-1]){
            ans.push_back(a[i-1]);
            i--;
            j--;
        }
        else {
            if(dp[i-1][j]<dp[i][j-1])j--;
            else i--;
        }
    }
    reverse(ans.begin(),ans.end());
    cout<<ans;
    return 0;
}
