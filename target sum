  int solve(vector<int>a,int sum){
      int n=a.size();
      int dp[n+1][sum+1];
      for(int i=0;i<=n;i++){
          for(int j=0;j<=sum;j++){
              if(i==0)dp[i][j]=0;
              if(j==0)dp[i][j]=1;
          }
      }
      for(int i=1;i<=n;i++){
          for(int j=1;j<=sum;j++){
            
            if(a[i-1]<=j)dp[i][j]=dp[i-1][j-a[i-1]]+dp[i-1][j];
            else dp[i][j]=dp[i-1][j];
            
      }
    }
    return dp[n][sum];
  }
  
    int findTargetSumWays(vector<int>&a ,int target) {
        //Your code here
        int sum=0;
        int count=0;
        for(int i=0;i<a.size();i++){
            if(a[i]==0)count++;
            sum+=a[i];
        }
        if((sum+target)%2!=0)return 0;
       // if(sum+target==0)return pow(2,a.size());
        if(sum==target)return pow(2,count);
        int s=(target+sum)/2;
       return solve(a,s);
    }
